{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "annotations": {
      "description": "HTTPD builder and sample application",
      "iconClass": "icon-apache",
      "tags": "quickstart,httpd,web"
    },
    "name": "httpd-quickstart-rhel"
  },
  "labels": {
    "template": "httpd-quickstart-rhel"
  },
  "parameters": [
    {
      "description": "The name for the Apache HTTPD builder.",
      "displayName": "Apache HTTPD builder name",
      "name": "HTTPD_BUILDER_NAME",
      "value": "s2i-httpd",
      "required": true
    },
    {
      "description": "Git source URI for HTTPD builder",
      "displayName": "HTTPD builder source url",
      "name": "HTTPD_BUILDER_SOURCE_REPOSITORY_URL",
      "value": "https://github.com/redhat-cop/containers-quickstarts.git",
      "required": true
    },
    {
      "description": "HTTPD builder source branch/tag reference.",
      "displayName": "HTTPD source branch/tag reference.",
      "name": "HTTPD_BUILDER_SOURCE_REPOSITORY_REF",
      "value": "master",
      "required": false
    },
    {
      "description": "Path within Git project to build containing the HTTPD builder; empty for root project directory.",
      "displayName": "HTTPD builder context directory.",
      "name": "HTTPD_BUILDER_CONTEXT_DIR",
      "value": "s2i-httpd",
      "required": false
    },
    {
      "description": "The name for the HTTPD application.",
      "displayName": "Apache application name",
      "name": "HTTPD_APPLICATION_NAME",
      "value": "httpd-app",
      "required": true
    },
    {
      "description": "Git source URI for HTTPD application",
      "displayName": "HTTPD application source url",
      "name": "HTTPD_APPLICATION_SOURCE_REPOSITORY_URL",
      "value": "https://github.com/rht-labs/infographic.git",
      "required": true
    },
    {
      "description": "HTTPD application source branch/tag reference.",
      "displayName": "HTTPD application source branch/tag reference.",
      "name": "HTTPD_APPLICATION_SOURCE_REPOSITORY_REF",
      "value": "master",
      "required": false
    },
    {
      "description": "Path within Git project to build containing the HTTPD application; empty for root project directory.",
      "displayName": "HTTPD application context directory.",
      "name": "HTTPD_APPLICATION_CONTEXT_DIR",
      "value": "website",
      "required": false
    },
    {
      "name": "HTTPD_APPLICATION_HOSTNAME",
      "displayName": "HTTPD application route hostname.",
      "description": "Custom hostname for HTTPD service route.  Leave blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
    }
  ],
  "objects": [
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${HTTPD_APPLICATION_NAME}",
        "labels": {
          "application": "${HTTPD_APPLICATION_NAME}"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${HTTPD_APPLICATION_NAME}",
        "labels": {
          "application": "${HTTPD_APPLICATION_NAME}"
        },
        "annotations": {
          "description": "Route for application's http service."
        }
      },
      "spec": {
        "host": "${HTTPD_APPLICATION_HOSTNAME}",
        "to": {
          "kind": "Service",
          "name": "${HTTPD_APPLICATION_NAME}"
        },
        "port": {
          "targetPort": "8080-tcp"
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${HTTPD_APPLICATION_NAME}",
        "labels": {
          "application": "${HTTPD_APPLICATION_NAME}"
        },
        "annotations": {
          "description": "The HTTPD server's http port."
        }
      },
      "spec": {
        "ports": [
          {
            "name": "8080-tcp",
            "protocol": "TCP",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "application": "${HTTPD_APPLICATION_NAME}",
          "deploymentconfig": "${HTTPD_APPLICATION_NAME}"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${HTTPD_APPLICATION_NAME}",
        "labels": {
          "app": "${HTTPD_APPLICATION_NAME}"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling",
          "rollingParams": {
            "updatePeriodSeconds": 1,
            "intervalSeconds": 1,
            "timeoutSeconds": 600,
            "maxUnavailable": "25%",
            "maxSurge": "25%"
          },
          "resources": {}
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${HTTPD_APPLICATION_NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${HTTPD_APPLICATION_NAME}:latest"
              }
            }
          }
        ],
        "replicas": 1,
        "test": false,
        "selector": {
          "application": "${HTTPD_APPLICATION_NAME}",
          "deploymentconfig": "${HTTPD_APPLICATION_NAME}"
        },
        "template": {
          "metadata": {
            "labels": {
              "application": "${HTTPD_APPLICATION_NAME}",
              "deploymentconfig": "${HTTPD_APPLICATION_NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${HTTPD_APPLICATION_NAME}",
                "image": "${HTTPD_APPLICATION_NAME}",
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "terminationMessagePath": "/dev/termination-log",
                "imagePullPolicy": "Always"
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "securityContext": {}
          }
        }
      }
    }
  ]
}